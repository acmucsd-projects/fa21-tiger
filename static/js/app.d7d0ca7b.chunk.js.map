{"version":3,"sources":["src/styles.js","src/buttons/BackButton.js","src/buttons/CreateButton.js","src/buttons/MenuButton.js","src/utils.js","src/components/ShadedOverlay.js","src/components/UnsavedDialog.js","src/components/CreateMenu.js","src/components/LightBacking.js","src/buttons/ArrowIcon.js","src/components/Card.js","src/components/Logo.js","src/components/Menu.js","src/components/BaseView.js","src/views/Home.js","src/components/Happiness.js","src/sid/Journals.js","src/sid/utils.js","src/sid/Sid.js","src/views/Journal.js","src/buttons/EditButton.js","src/views/Details.js","src/buttons/ApproveButton.js","src/components/TextArea.js","src/buttons/PlusMinusButtons.js","src/buttons/DropdownIcon.js","src/views/EditEntry.js","App.js","webpack:///./index.js?41f5"],"names":["text","StyleSheet","create","title","fontFamily","fontSize","subtitle","body","detail","textColour","white","colours","backing","backgroundColor","secondary","primary","color","cardBacking","greyOnWhite","whiteTextOnBacking","danger","positive","overlayBackground","lightBacking","shadows","smallShadow","shadowOffset","width","height","shadowRadius","shadowColor","elevation","BackButton","onPress","TouchableOpacity","viewBox","strokeWidth","stroke","strokeLinecap","x1","y1","x2","y2","CreateButton","style","View","styles","button","d","alignItems","justifyContent","borderRadius","MenuButton","useRerenderOnFocus","navigation","useState","setDummy","useEffect","addListener","value","ShadedOverlay","cancel","onCancel","wrapperStyle","onClose","children","useFocusEffect","useCallback","handleBackPress","BackHandler","addEventListener","removeEventListener","wrapper","TouchableWithoutFeedback","background","position","top","left","zIndex","UnsavedDialogContext","createContext","exitAction","setExitAction","Error","UnsavedDialog","onExit","overlayWrapper","dialog","Text","buttons","CheckUnsavedChanges","hasUnsavedChanges","useContext","handleBeforeRemove","e","preventDefault","dispatch","data","action","removeListener","padding","marginVertical","paddingTop","alignSelf","paddingVertical","paddingHorizontal","marginTop","flexDirection","CreateMenu","onNewTask","onNewJournal","createOption","icon","marginLeft","LightBacking","LinearGradient","colors","right","bottom","ArrowIcon","fill","points","Card","flexStyle","MaybePressable","card","content","flex","Logo","Menu","logo","version","marginBottom","textAlign","TitleBar","onBack","SafeAreaView","titleBar","BaseView","hideBottomButtons","noPadding","contentStyle","setUnsavedDialogContextValue","unsavedDialogContextValue","showingMenu","setShowingMenu","showingCreateMenu","setShowingCreateMenu","ContentView","goBack","Provider","contentPadding","bottomButton","menu","reset","index","routes","name","params","Home","navigate","hint","Happiness","happiness","marginRight","Journals","lastEdited","journalId","a","async","this","AsyncStorage","getItem","json","JSON","parse","mood","moodIntensity","description","created","modified","Date","now","journal","undefined","Math","random","toFixed","slice","get","oldJournal","setItem","stringify","then","ids","includes","split","filter","id","join","removeItem","journalIds","Promise","all","map","Sid","journals","SidContext","Journal","sid","setJournals","list","sort","b","FlatList","renderItem","item","toLocaleString","keyExtractor","ListHeaderComponent","ListFooterComponent","EditButton","Details","route","setJournal","initJournalData","intensity","ApproveButton","TextArea","borderVertical","props","setHeight","TextInput","multiline","textAlignVertical","onContentSizeChange","nativeEvent","contentSize","PlusMinusButton","isPlus","PlusButton","MinusButton","DropdownIcon","strokeLinejoin","parseRawIntensity","rawIntensity","Number","isFinite","min","max","round","EditEntry","setIntensity","setRawIntensity","setDescription","unsavedChanges","canExit","useRef","current","save","console","log","Alert","alert","selector","toString","onChange","replace","onBlur","keyboardType","textArea","delete","moodRate","borderColor","borderWidth","marginHorizontal","Stack","createNativeStackNavigator","registerRootComponent","useFonts","PTSans_400Regular","PTSans_700Bold","StatusBar","NavigationContainer","Navigator","initialRouteName","screenOptions","headerShown","Screen","component"],"mappings":"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","file":"static/js/app.d7d0ca7b.chunk.js","sourcesContent":["import { StyleSheet } from 'react-native'\n\nexport const text = StyleSheet.create({\n  title: {\n    fontFamily: 'PTSans_700Bold',\n    fontSize: 30\n  },\n  subtitle: {\n    fontFamily: 'PTSans_700Bold',\n    fontSize: 24\n  },\n  body: {\n    fontFamily: 'PTSans_400Regular',\n    fontSize: 18\n  },\n  detail: {\n    fontFamily: 'PTSans_400Regular',\n    fontSize: 14\n  }\n})\n\nexport const secondary = '#67B3FA'\nexport const primary = '#1955EF'\nexport const greyOnWhite = '#9E9E9E'\nexport const textColour = 'rgba(0, 0, 0, 0.7216)'\nexport const white = '#FFFFFF'\nexport const colours = StyleSheet.create({\n  backing: {\n    backgroundColor: white\n  },\n  secondary: {\n    backgroundColor: secondary\n  },\n  primary: {\n    backgroundColor: primary\n  },\n  text: {\n    color: textColour\n  },\n  cardBacking: {\n    backgroundColor: 'rgba(255, 255, 255, 0.9)'\n  },\n  greyOnWhite: {\n    backgroundColor: greyOnWhite\n  },\n  whiteTextOnBacking: {\n    color: white\n  },\n  danger: {\n    backgroundColor: '#C51800'\n  },\n  positive: {\n    backgroundColor: '#2DE381'\n  },\n  overlayBackground: {\n    backgroundColor: 'rgba(0, 0, 0, 0.25)'\n  }\n})\nexport const lightBacking = [primary, secondary]\n\nexport const shadows = StyleSheet.create({\n  smallShadow: {\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowColor: 'rgba(0, 0, 0, 0.25)',\n    elevation: 3 // guesstimate\n  }\n})\n","import React from 'react'\nimport { TouchableOpacity } from 'react-native'\nimport Svg, { Line } from 'react-native-svg'\nimport { textColour } from '../styles'\n\n/**\n * The < icon button in the Figma\n */\nexport function BackButton ({ onPress }) {\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Svg\n        viewBox='0 0 40 40'\n        width={40}\n        height={40}\n        strokeWidth={3}\n        stroke={textColour}\n        strokeLinecap='round'\n      >\n        <Line x1={14} y1={20} x2={25} y2={9} />\n        <Line x1={14} y1={20} x2={25} y2={31} />\n      </Svg>\n    </TouchableOpacity>\n  )\n}\n","import React from 'react'\nimport { StyleSheet, TouchableOpacity, View } from 'react-native'\nimport Svg, { Path } from 'react-native-svg'\nimport { colours, primary, shadows } from '../styles'\n\nexport function CreateButton ({ style, onPress }) {\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View\n        style={[colours.backing, shadows.smallShadow, styles.button, style]}\n      >\n        <Svg\n          width={30}\n          height={30}\n          viewBox='0 0 30 30'\n          stroke={primary}\n          strokeWidth={4}\n          strokeLinecap='round'\n        >\n          <Path d='M 2 15 L 28 15 M 15 2 L 15 28' />\n        </Svg>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 50,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 25\n  }\n})\n","import React from 'react'\nimport { StyleSheet, TouchableOpacity, View } from 'react-native'\nimport Svg, { Path } from 'react-native-svg'\nimport { colours, primary, shadows } from '../styles'\n\nexport function MenuButton ({ style, onPress }) {\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View\n        style={[colours.backing, shadows.smallShadow, styles.button, style]}\n      >\n        <Svg\n          width={26}\n          height={24}\n          viewBox='0 0 26 24'\n          stroke={primary}\n          strokeWidth={4}\n          strokeLinecap='round'\n        >\n          <Path d='M 2 2 H 24 M 2 12 H 24 M 2 22 H 24' />\n        </Svg>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 50,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 25\n  }\n})\n","// @ts-check\n\nimport { useFocusEffect } from '@react-navigation/native'\nimport { useCallback, useEffect, useState } from 'react'\nimport { BackHandler } from 'react-native'\n\n/**\n * Cancels the default Android back button behaviour. For example, if there's a\n * dialogue covering the screen, the back button should close it rather than\n * also going to the previous view.\n *\n * @param {boolean} cancel Whether to cancel the default Android back button\n * behaviour.\n * @param {() => {}} onCancel A handler for when the back button is cancelled.\n * NOTE: This is likely going to have stale values because it is not listed as a\n * dependency for useCallback.\n * @see https://reactnavigation.org/docs/custom-android-back-button-handling\n */\nexport function useAndroidBackCancel (cancel, onCancel) {\n  useFocusEffect(\n    useCallback(() => {\n      if (cancel) {\n        const handleBackPress = () => {\n          onCancel()\n          return true\n        }\n        BackHandler.addEventListener('hardwareBackPress', handleBackPress)\n        return () => {\n          BackHandler.removeEventListener('hardwareBackPress', handleBackPress)\n        }\n      }\n    }, [cancel])\n  )\n}\n\n/**\n * Re-renders the component when the screen gets back into focus. This is a hack\n * because React Native Navigation, for some reason, doesn't do that, so the\n * useEffect dependency list doesn't get refreshed.\n *\n * @param\n * {import('@react-navigation/native-stack').NativeStackScreenProps<unknown>['navigation']}\n * navigation\n */\nexport function useRerenderOnFocus (navigation) {\n  const [, setDummy] = useState(0)\n\n  useEffect(() => {\n    const unsubscriber = navigation.addListener('focus', () => {\n      // Trigger a re-render by changing the state.\n      setDummy(value => value + 1)\n    })\n    return unsubscriber\n  }, [navigation])\n}\n","import React from 'react'\nimport { StyleSheet, TouchableWithoutFeedback, View } from 'react-native'\nimport { colours } from '../styles'\nimport { useAndroidBackCancel } from '../utils'\n\nexport function ShadedOverlay ({ wrapperStyle, onClose, children }) {\n  useAndroidBackCancel(true, onClose)\n  return (\n    <View style={[styles.wrapper, wrapperStyle]}>\n      <TouchableWithoutFeedback onPress={onClose}>\n        <View style={[styles.background, colours.overlayBackground]} />\n      </TouchableWithoutFeedback>\n      {children}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    zIndex: 100\n  },\n  background: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%'\n  }\n})\n","import React, { createContext, useContext, useEffect } from 'react'\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport Svg, { Path } from 'react-native-svg'\nimport { colours, shadows, text, white } from '../styles'\nimport { ShadedOverlay } from './ShadedOverlay'\n\nexport const UnsavedDialogContext = createContext({\n  exitAction: null,\n  setExitAction: () => {\n    throw new Error(\n      'Context provider was not given, so useContext is using the default value.'\n    )\n  }\n})\n\nexport function UnsavedDialog ({ onCancel, onExit }) {\n  return (\n    <ShadedOverlay onClose={onCancel} wrapperStyle={styles.overlayWrapper}>\n      <View style={[styles.dialog, colours.backing, shadows.smallShadow]}>\n        <Text style={[text.subtitle]}>Heads up!</Text>\n        <Text style={[styles.body, text.body]}>\n          Unsaved changes will be lost.\n        </Text>\n        <View style={styles.buttons}>\n          <TouchableOpacity\n            style={[styles.button, colours.greyOnWhite, shadows.smallShadow]}\n            onPress={onCancel}\n          >\n            <Text style={[colours.whiteTextOnBacking, text.body]}>Cancel</Text>\n            <Svg\n              viewBox='0 0 20 20'\n              width={20}\n              height={20}\n              stroke={white}\n              strokeWidth={3}\n              strokeLinecap='round'\n            >\n              <Path d='M 2 18 L 18 2 M 2 2 L 18 18' />\n            </Svg>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[styles.button, colours.danger, shadows.smallShadow]}\n            onPress={onExit}\n          >\n            <Text style={[colours.whiteTextOnBacking, text.body]}>\n              Exit Without Saving\n            </Text>\n            <Svg\n              width={20}\n              height={20}\n              viewBox='0 0 20 20'\n              stroke={white}\n              strokeWidth={3}\n              strokeLinecap='round'\n            >\n              <Path d='M18 10.5L14.2619 14.2381 M18 10.5L14.3064 6.80637 M2 2.5L2 18.5 M2 2.5H10 M2 18.5H10 M18 10.5H10' />\n            </Svg>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </ShadedOverlay>\n  )\n}\n\nexport function CheckUnsavedChanges ({ navigation, hasUnsavedChanges }) {\n  const { setExitAction } = useContext(UnsavedDialogContext)\n\n  // https://reactnavigation.org/docs/preventing-going-back\n  useEffect(() => {\n    const handleBeforeRemove = e => {\n      if (hasUnsavedChanges()) {\n        e.preventDefault()\n        setExitAction(() => {\n          navigation.dispatch(e.data.action)\n        })\n      }\n    }\n    navigation.addListener('beforeRemove', handleBeforeRemove)\n    return () => {\n      navigation.removeListener('beforeRemove', handleBeforeRemove)\n    }\n  }, [navigation, hasUnsavedChanges])\n\n  return null\n}\n\nconst styles = StyleSheet.create({\n  overlayWrapper: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  dialog: {\n    width: 303,\n    padding: 10,\n    alignItems: 'center',\n    borderRadius: 15\n  },\n  body: {\n    marginVertical: 5\n  },\n  buttons: {\n    padding: 5,\n    paddingTop: 0,\n    alignSelf: 'stretch'\n  },\n  button: {\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 20,\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n})\n","import React from 'react'\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport Svg, { Path } from 'react-native-svg'\nimport { colours, primary, text } from '../styles'\nimport { ShadedOverlay } from './ShadedOverlay'\n\nexport function CreateMenu ({ onClose, onNewTask, onNewJournal }) {\n  return (\n    <ShadedOverlay onClose={onClose} wrapperStyle={styles.overlayWrapper}>\n      {onNewTask && (\n        <TouchableOpacity style={styles.createOption} onPress={onNewTask}>\n          <Text style={[colours.whiteTextOnBacking, text.subtitle]}>\n            New Task\n          </Text>\n          <View style={[colours.backing, styles.icon]}>\n            <Svg\n              width={30}\n              height={30}\n              viewBox='0 0 30 30'\n              stroke={primary}\n              strokeWidth={4}\n              strokeLinecap='round'\n            >\n              <Path d='M23 2V12 M28 7L18 7 M28 7L18 7 M11 7L2 7 M2 28L2 7 M23 28L23 19 M23 28L2 28' />\n            </Svg>\n          </View>\n        </TouchableOpacity>\n      )}\n      {onNewJournal && (\n        <TouchableOpacity style={styles.createOption} onPress={onNewJournal}>\n          <Text style={[colours.whiteTextOnBacking, text.subtitle]}>\n            New Journal Entry\n          </Text>\n          <View style={[colours.backing, styles.icon]}>\n            <Svg\n              width={30}\n              height={30}\n              viewBox='0 0 30 30'\n              stroke={primary}\n              strokeWidth={4}\n              strokeLinecap='round'\n            >\n              <Path d='M23 2V12 M28 7L18 7 M28 7L18 7 M11 7L2 7 M2 28L2 7 M23 28L23 19 M23 28L2 28' />\n            </Svg>\n          </View>\n        </TouchableOpacity>\n      )}\n    </ShadedOverlay>\n  )\n}\n\nconst styles = StyleSheet.create({\n  overlayWrapper: {\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    padding: 15\n  },\n  createOption: {\n    alignItems: 'center',\n    marginTop: 15,\n    flexDirection: 'row'\n  },\n  // Interestingly, the icons for the create menu don't have shadows\n  icon: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 12\n  }\n})\n","import { LinearGradient } from 'expo-linear-gradient'\nimport React from 'react'\nimport { StyleSheet } from 'react-native'\nimport { lightBacking } from '../styles'\n\nexport function LightBacking () {\n  return <LinearGradient colors={lightBacking} style={styles.background} />\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: -1\n  }\n})\n","import React from 'react'\nimport Svg, { Line, Polyline } from 'react-native-svg'\nimport { primary } from '../styles'\n\n/**\n * The -> icon on the cards\n */\nexport function ArrowIcon () {\n  return (\n    <Svg\n      viewBox='0 0 24 24'\n      width={24}\n      height={24}\n      strokeWidth={2.5}\n      stroke={primary}\n      strokeLinecap='round'\n      fill='none'\n    >\n      <Line x1={2} y1={12} x2={22} y2={12} />\n      <Polyline points='14,4 22,12 14,20'></Polyline>\n    </Svg>\n  )\n}\n","import React from 'react'\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { colours, shadows } from '../styles'\n\n/**\n * Those, like, translucent cards in the Figma.\n *\n * Props:\n * - `style` - extra styles to add to the card (optional)\n * - `children` - card content\n * - `left` - content to make on the left side of the card, like those circular thingies (optional)\n * - `right` - content on the right side, like the arrow (optional)\n * - `onPress` - what to do when the card is pressed (optional)\n */\nexport function Card ({ style, flexStyle, children, left, right, onPress }) {\n  const MaybePressable = onPress ? TouchableOpacity : View\n  return (\n    <MaybePressable\n      style={[colours.cardBacking, styles.card, shadows.smallShadow, style]}\n      onPress={onPress}\n    >\n      {left}\n      <View style={[styles.content, flexStyle]}>{children}</View>\n      {right}\n    </MaybePressable>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    padding: 15,\n    borderRadius: 15,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  content: {\n    flex: 1\n  }\n})\n","import React from 'react'\nimport { View, StyleSheet, Text } from 'react-native'\nimport Svg, { Path } from 'react-native-svg'\nimport { colours, secondary, text } from '../styles'\n\n/**\n * NOTE: The logo used in the design mockups are scaled up by 55/39.\n */\nexport function Logo ({ style }) {\n  return (\n    <View style={[styles.wrapper, style]}>\n      <Svg width={11} height={21} viewBox='0 0 11 21' fill={secondary}>\n        <Path d='M11 6C11 2.68629 8.31371 0 5 0H0V5C0 8.31371 2.68629 11 6 11H10.4697L4.73483 5.26517C4.58839 5.11872 4.58839 4.88128 4.73483 4.73484C4.88128 4.58839 5.11872 4.58839 5.26516 4.73484L11 10.4697L11 6Z' />\n        <Path d='M10.6464 13H8C5.23858 13 3 15.2386 3 18V21H6C8.76142 21 11 18.7614 11 16V13.3536L7.17678 17.1768C7.07915 17.2744 6.92085 17.2744 6.82322 17.1768C6.72559 17.0791 6.72559 16.9209 6.82322 16.8232L10.6464 13Z' />\n      </Svg>\n      <Text style={[text.title, colours.whiteTextOnBacking, styles.text]}>\n        Menta\n      </Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  text: {\n    marginLeft: 1\n  }\n})\n","import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { ArrowIcon } from '../buttons/ArrowIcon'\nimport { colours, text } from '../styles'\nimport { Card } from './Card'\nimport { LightBacking } from './LightBacking'\nimport { Logo } from './Logo'\nimport { ShadedOverlay } from './ShadedOverlay'\n\nexport function Menu ({ onClose }) {\n  return (\n    <ShadedOverlay onClose={onClose} wrapperStyle={styles.overlayWrapper}>\n      <View style={styles.wrapper}>\n        <LightBacking />\n        <Logo style={styles.logo} />\n        <Card style={styles.card} right={<ArrowIcon />}>\n          <Text style={[text.subtitle, colours.text]}>Analytics</Text>\n          <Text style={[text.body, colours.text]}>\n            View historical insights\n          </Text>\n        </Card>\n        <Card style={styles.card} right={<ArrowIcon />}>\n          <Text style={[text.subtitle, colours.text]}>Notifications</Text>\n          <Text style={[text.body, colours.text]}>Set notification times</Text>\n        </Card>\n        <Card style={styles.card} right={<ArrowIcon />}>\n          <Text style={[text.subtitle, colours.text]}>Settings</Text>\n          <Text style={[text.body, colours.text]}>\n            Set theme, language, etc.\n          </Text>\n        </Card>\n        <Text style={[text.detail, colours.whiteTextOnBacking, styles.version]}>\n          Menta v1.0\n        </Text>\n      </View>\n    </ShadedOverlay>\n  )\n}\n\nconst styles = StyleSheet.create({\n  overlayWrapper: {\n    alignItems: 'flex-start'\n  },\n  wrapper: {\n    flex: 1,\n    width: 291,\n    padding: 15\n  },\n  logo: {\n    marginBottom: 15\n  },\n  card: {\n    marginBottom: 10\n  },\n  version: {\n    textAlign: 'center'\n  }\n})\n","import React, { useState } from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\nimport { colours, shadows, text } from '../styles'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { BackButton } from '../buttons/BackButton'\nimport { CreateButton } from '../buttons/CreateButton'\nimport { MenuButton } from '../buttons/MenuButton'\nimport { UnsavedDialog, UnsavedDialogContext } from './UnsavedDialog'\nimport { CreateMenu } from './CreateMenu'\nimport { LightBacking } from './LightBacking'\nimport { Menu } from './Menu'\n\nfunction TitleBar ({ title, action, onBack }) {\n  return (\n    <SafeAreaView\n      style={[colours.backing, shadows.smallShadow, styles.titleBar]}\n    >\n      <BackButton onPress={onBack} />\n      <Text style={[colours.text, text.title, styles.title]}>{title}</Text>\n      {/* Insert placeholder if no action button; may have to resize this for that ELONGATED done button */}\n      {action ?? <View style={{ width: 40 }}></View>}\n    </SafeAreaView>\n  )\n}\n\n/**\n * Template for each view that provides a title bar\n *\n * - `navigation` - React Native navigation gives each view a `navigation` prop.\n *   Give it to BaseView so that its back button works\n * - `title` - text to show in the title bar (optional - if omitted, there is no\n *   title bar)\n * - `action` - thing to show on top right, maybe a done button or edit button\n *   (optional)\n * - `hideBottomButtons` (false by default) - whether to hide the menu and\n *   create buttons at the bottom\n * - `noPadding` (false by default) - whether to include padding around the\n *   content\n * - `contentStyle` - other styles to apply to the content view\n * - `children` - content of view\n */\nexport function BaseView ({\n  navigation,\n  title,\n  action,\n  hideBottomButtons = false,\n  noPadding = false,\n  contentStyle,\n  children\n}) {\n  // This is kind of scuffed but position: fixed isn't supported by React Native\n  // apparently\n  const setExitAction = exitAction => {\n    setUnsavedDialogContextValue(({ setExitAction }) => ({\n      exitAction,\n      setExitAction\n    }))\n  }\n  const [unsavedDialogContextValue, setUnsavedDialogContextValue] = useState({\n    exitAction: null,\n    setExitAction\n  })\n\n  const [showingMenu, setShowingMenu] = useState(false)\n  const [showingCreateMenu, setShowingCreateMenu] = useState(false)\n\n  // SafeAreaView doesn't take into account where it's actually used, so if the\n  // title bar is claiming the top padding, then it'd repeat the padding for\n  // content.\n  const ContentView = title ? View : SafeAreaView\n  return (\n    <View style={[colours.whiteTextOnBacking, text.body, styles.wrapper]}>\n      <LightBacking />\n      {title && (\n        <TitleBar\n          title={title}\n          action={action}\n          onBack={() => {\n            navigation.goBack()\n          }}\n        />\n      )}\n      {unsavedDialogContextValue.exitAction && (\n        <UnsavedDialog\n          onCancel={() => {\n            setExitAction(null)\n          }}\n          onExit={() => {\n            unsavedDialogContextValue.exitAction()\n            setExitAction(null)\n          }}\n        />\n      )}\n      <UnsavedDialogContext.Provider value={unsavedDialogContextValue}>\n        <ContentView\n          style={[\n            styles.content,\n            !noPadding && styles.contentPadding,\n            contentStyle\n          ]}\n        >\n          {children}\n        </ContentView>\n      </UnsavedDialogContext.Provider>\n      {!hideBottomButtons && (\n        <>\n          <MenuButton\n            style={[styles.bottomButton, styles.menu]}\n            onPress={() => setShowingMenu(true)}\n          />\n          <CreateButton\n            style={[styles.bottomButton, styles.create]}\n            onPress={() => setShowingCreateMenu(true)}\n          />\n        </>\n      )}\n      {showingMenu && <Menu onClose={() => setShowingMenu(false)} />}\n      {showingCreateMenu && (\n        <CreateMenu\n          onClose={() => setShowingCreateMenu(false)}\n          onNewJournal={() => {\n            setShowingCreateMenu(false)\n            navigation.reset({\n              index: 2,\n              routes: [\n                { name: 'Home' },\n                { name: 'Journal' },\n                { name: 'EditEntry', params: {} }\n              ]\n            })\n          }}\n        />\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  titleBar: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    padding: 15\n  },\n\n  wrapper: {\n    flex: 1\n  },\n  content: {\n    flex: 1\n  },\n  contentPadding: {\n    padding: 15\n  },\n\n  bottomButton: {\n    position: 'absolute',\n    bottom: 15\n  },\n  menu: {\n    left: 15\n  },\n  create: {\n    right: 15\n  }\n})\n","import React from 'react'\nimport { Text, StyleSheet } from 'react-native'\nimport { BaseView } from '../components/BaseView'\nimport { colours, text } from '../styles'\nimport { Card } from '../components/Card'\nimport { ArrowIcon } from '../buttons/ArrowIcon'\nimport { Logo } from '../components/Logo'\n\nexport function Home ({ navigation }) {\n  return (\n    <BaseView navigation={navigation}>\n      <Logo style={[styles.logo]} />\n      <Text style={[text.subtitle, colours.whiteTextOnBacking]}>\n        Good morning, Tony!\n      </Text>\n      <Text style={[text.body, colours.whiteTextOnBacking]}>\n        Ready to take on the world?\n      </Text>\n      <Card\n        style={styles.card}\n        right={<ArrowIcon />}\n        onPress={() => {\n          navigation.navigate('Journal')\n        }}\n      >\n        <Text style={[text.subtitle, colours.text]}>View my journal</Text>\n        <Text style={[text.body, colours.text]}>\n          Write freely about your thoughts\n        </Text>\n      </Card>\n      <Card style={styles.card}>\n        <Text style={[text.subtitle, colours.text]}>Sleep 8 Hours</Text>\n        <Text style={[text.body, colours.text]}>7h 30m today • Streak: 0</Text>\n      </Card>\n      <Text style={[text.detail, colours.whiteTextOnBacking, styles.hint]}>\n        Swipe left to skip • Swipe right to complete\n      </Text>\n    </BaseView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    marginTop: 10\n  },\n  hint: {\n    textAlign: 'center',\n    marginTop: 10\n  },\n  logo: {\n    marginBottom: 10\n  }\n})\n","import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { colours, shadows, text } from '../styles'\n\nexport function Happiness ({ happiness }) {\n  return (\n    <View style={[styles.icon, colours.positive, shadows.smallShadow]}>\n      <Text style={[text.title, colours.whiteTextOnBacking]}>{happiness}</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    borderRadius: 25,\n    width: 50,\n    height: 50,\n    marginRight: 15,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n})\n","// @ts-check\n\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { uuid } from './utils'\n\n/**\n * Journal entry data to be given to `save`.\n * @typedef {object} JournalSaveData\n * @property {string} mood - \"What’s your mood?\"\n * @property {number} moodIntensity - \"How intense is that mood? (1-10)\"\n * @property {string} description\n */\n\n/**\n * Journal entry data to show in the journal list.\n * @typedef {object} JournalPreview\n * @property {string} id - The journal ID.\n * @property {string} mood - \"What’s your mood?\"\n * @property {number} moodIntensity - \"How intense is that mood? (1-10)\"\n * @property {Date} created\n * @property {Date} modified\n */\n\n/**\n * A journal entry as returned by `get`.\n * @typedef {object} Journal\n * @property {string} mood - \"What’s your mood?\"\n * @property {number} moodIntensity - \"How intense is that mood? (1-10)\"\n * @property {string} description\n * @property {Date} created\n * @property {Date} modified\n */\n\n/**\n * Handles journal data.\n */\nexport class Journals {\n  /** @type {Record<string, Journal>} */\n  #cache = {}\n\n  /** @type {number} */\n  lastEdited = 0\n\n  /**\n   * Gets a journal entry by its ID.\n   * @param {string} journalId\n   * @returns {Promise<Journal | null>} The journal entry, or null if it doesn't\n   * exist.\n   */\n  async get (journalId) {\n    if (!this.#cache[journalId]) {\n      const json = await AsyncStorage.getItem(`journal:${journalId}`)\n      if (json === null) {\n        this.#cache[journalId] = null\n      } else {\n        const {\n          mood,\n          moodIntensity,\n          description,\n          created,\n          modified\n        } = JSON.parse(json)\n        this.#cache[journalId] = {\n          mood,\n          moodIntensity,\n          description,\n          created: new Date(created),\n          modified: new Date(modified)\n        }\n      }\n    }\n    return this.#cache[journalId]\n  }\n\n  /**\n   * Saves a journal entry, whether it's an existing or a new entry.\n   * @param {JournalSaveData} journal - The journal entry data to save.\n   * @param {string} [journalId] - The ID of the journal entry if the journal\n   * already exists. Omit if the journal entry is new.\n   * @returns {Promise<string>} The ID of the journal entry.\n   */\n  async save ({ mood, moodIntensity, description }, journalId) {\n    const now = new Date()\n    const journal = {\n      mood,\n      moodIntensity,\n      description,\n      created: now,\n      modified: now\n    }\n    if (journalId === undefined) {\n      journalId = uuid()\n    } else {\n      const oldJournal = await this.get(journalId)\n      if (oldJournal) journal.created = oldJournal.created\n    }\n    this.#cache[journalId] = journal\n    await AsyncStorage.setItem(`journal:${journalId}`, JSON.stringify(journal))\n    await AsyncStorage.setItem(\n      'journal:list',\n      await AsyncStorage.getItem('journal:list').then(ids => {\n        return ids?.includes(journalId)\n          ? ids\n          : (ids ? ids + ',' : '') + journalId\n      })\n    )\n    this.lastEdited = Date.now()\n    return journalId\n  }\n\n  /**\n   * Deletes a journal entry by its ID.\n   * @param {string} journalId\n   */\n  async delete (journalId) {\n    delete this.#cache[journalId]\n    await AsyncStorage.setItem(\n      'journal:list',\n      await AsyncStorage.getItem('journal:list').then(ids => {\n        if (ids) {\n          return ids\n            .split(',')\n            .filter(id => id !== journalId)\n            .join(',')\n        } else {\n          return ''\n        }\n      })\n    )\n    await AsyncStorage.removeItem(`journal:${journalId}`)\n    this.lastEdited = Date.now()\n  }\n\n  /**\n   * Lists all journals.\n   * @returns {Promise<JournalPreview[]>}\n   */\n  async list () {\n    const journalIds = await AsyncStorage.getItem('journal:list').then(ids =>\n      ids ? ids.split(',') : []\n    )\n    return Promise.all(\n      journalIds.map(async id => {\n        const { mood, moodIntensity, created, modified } = await this.get(id)\n        return { id, mood, moodIntensity, created, modified }\n      })\n    )\n  }\n}\n","// @ts-check\n\n/**\n * Generates a unique ID containing at least 10 base 10 digits.\n */\nexport function uuid () {\n  return `${Date.now()}${Math.random()\n    .toFixed(10)\n    .slice(2)}`\n}\n","// @ts-check\n\nimport { createContext } from 'react'\nimport { Journals } from './Journals'\n\n/**\n * Sid (named after our backend developer) handles the back end of Menta.\n * Currently, it uses React Native Async Storage, but in the future, if we ever\n * add a server-side back end, it would mostly involve just editing Sid.\n */\nexport class Sid {\n  journals = new Journals()\n}\n\n/**\n * @type {React.Context<Sid>}\n */\nexport const SidContext = createContext(null)\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Text, StyleSheet, FlatList } from 'react-native'\nimport { BaseView } from '../components/BaseView'\nimport { colours, text } from '../styles'\nimport { Card } from '../components/Card'\nimport { ArrowIcon } from '../buttons/ArrowIcon'\nimport { Happiness } from '../components/Happiness'\nimport { SidContext } from '../sid/Sid'\nimport { useRerenderOnFocus } from '../utils'\n\n/**\n * Journal entry list.\n */\nexport function Journal ({ navigation }) {\n  const sid = useContext(SidContext)\n  const [journals, setJournals] = useState(null)\n\n  useEffect(() => {\n    sid.journals.list().then(journals => {\n      // Sort by most recently created first\n      setJournals(journals.sort((a, b) => b.created - a.created))\n    })\n  }, [sid.journals.lastEdited])\n  useRerenderOnFocus(navigation)\n\n  return (\n    <BaseView title='My Journal' navigation={navigation} noPadding>\n      <FlatList\n        style={styles.content}\n        data={journals ?? []}\n        renderItem={({ item: { id, mood, moodIntensity, created } }) => (\n          <Card\n            style={styles.card}\n            left={<Happiness happiness={moodIntensity} />}\n            onPress={() => {\n              navigation.navigate('Details', { journalId: id })\n            }}\n          >\n            <Text style={[text.subtitle, colours.text]}>{mood}</Text>\n            <Text style={[text.body, colours.text]}>\n              {created.toLocaleString()}\n            </Text>\n          </Card>\n        )}\n        keyExtractor={item => item.id}\n        ListHeaderComponent={\n          <>\n            <Text style={[text.subtitle, colours.whiteTextOnBacking]}>\n              Welcome back!\n            </Text>\n            <Text style={[text.body, colours.whiteTextOnBacking]}>\n              Feel free to write about your thoughts and feelings here anytime\n              you want.\n            </Text>\n            <Card\n              style={styles.card}\n              right={<ArrowIcon />}\n              onPress={() => {\n                navigation.navigate('EditEntry', {})\n              }}\n            >\n              <Text style={[text.subtitle, colours.text]}>\n                Start a new entry\n              </Text>\n              <Text style={[text.body, colours.text]}>\n                How are you feeling today?\n              </Text>\n            </Card>\n          </>\n        }\n        ListFooterComponent={\n          <Text style={[text.detail, colours.whiteTextOnBacking, styles.hint]}>\n            Tap a card to view or edit an entry.\n          </Text>\n        }\n      />\n    </BaseView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    padding: 15\n  },\n  card: {\n    marginTop: 10\n  },\n  hint: {\n    textAlign: 'center',\n    marginTop: 10\n  }\n})\n","import React from 'react'\nimport { TouchableOpacity } from 'react-native'\nimport Svg, { Path } from 'react-native-svg'\nimport { textColour } from '../styles'\n\n/**\n * The pencil icon button in the Figma\n */\nexport function EditButton ({ onPress }) {\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Svg viewBox='0 0 40 40' width={40} height={40} fill={textColour}>\n        <Path d='M24.125 10.8228L28.8057 15.4588L13.46 31.136L8.77929 26.5L24.125 10.8228Z' />\n        <Path d='M25.3193 9.5864L30 14.2224L32.9597 11.2088C33.2504 10.9129 33.2471 10.4356 32.9524 10.1437L29.3374 6.56326C29.0435 6.27221 28.571 6.27547 28.2813 6.57055L25.3193 9.5864Z' />\n        <Path d='M7.41525 33.4323L12.0557 32.5123L7.37498 27.8763L6.53495 32.5604C6.44143 33.0819 6.89862 33.5347 7.41525 33.4323Z' />\n      </Svg>\n    </TouchableOpacity>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Text, StyleSheet } from 'react-native'\nimport { BaseView } from '../components/BaseView'\nimport { colours, text } from '../styles'\nimport { Card } from '../components/Card'\nimport { EditButton } from '../buttons/EditButton'\nimport { Happiness } from '../components/Happiness'\nimport { SidContext } from '../sid/Sid'\nimport { useRerenderOnFocus } from '../utils'\n\n/**\n * Journal entry details.\n */\nexport function Details ({ route, navigation }) {\n  const { journalId } = route.params\n  const [journal, setJournal] = useState(null)\n  const sid = useContext(SidContext)\n\n  useEffect(() => {\n    sid.journals.get(journalId).then(setJournal)\n  }, [sid.journals.lastEdited])\n  useRerenderOnFocus(navigation)\n\n  return (\n    <BaseView\n      title='Entry Details'\n      navigation={navigation}\n      action={\n        journal && (\n          <EditButton\n            onPress={() => {\n              navigation.navigate('EditEntry', {\n                journalId,\n                initJournalData: {\n                  mood: journal.mood,\n                  intensity: journal.moodIntensity,\n                  description: journal.description\n                }\n              })\n            }}\n          />\n        )\n      }\n    >\n      {journal ? (\n        <>\n          <Card\n            style={styles.card}\n            left={<Happiness happiness={journal.moodIntensity} />}\n          >\n            <Text style={[text.subtitle, colours.text]}>{journal.mood}</Text>\n            <Text style={[text.body, colours.text]}>\n              {journal.created.toLocaleString()}\n            </Text>\n          </Card>\n          <Card style={styles.content}>\n            <Text style={[text.body, colours.text]}>{journal.description}</Text>\n          </Card>\n        </>\n      ) : (\n        <Text style={[text.detail, colours.whiteTextOnBacking, styles.hint]}>\n          Loading journal...\n        </Text>\n      )}\n    </BaseView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    marginBottom: 10\n  },\n  content: {\n    padding: 10\n  }\n})\n","import React from 'react'\nimport { StyleSheet, TouchableOpacity } from 'react-native'\nimport Svg, { Line } from 'react-native-svg'\nimport { colours, shadows, white } from '../styles'\n\n/**\n * The < icon button in the Figma\n */\nexport function ApproveButton ({ onPress }) {\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[styles.button, colours.primary, shadows.smallShadow]}\n    >\n      <Svg\n        viewBox='0 0 26.67 20'\n        width={26.67}\n        height={20}\n        strokeWidth={2.5}\n        stroke={white}\n        strokeLinecap='round'\n      >\n        <Line x1={1.77} y1={10.48} x2={9.52} y2={18.23} />\n        <Line x1={24.9} y1={2.86} x2={9.52} y2={18.23} />\n      </Svg>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 60,\n    height: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n})\n","import React, { useState } from 'react'\nimport { TextInput } from 'react-native'\n\n/**\n * A multiline text field that automatically grows to fit the text content.\n *\n * Unfortunately it does not shrink because I don't know how to do that. (TODO)\n */\nexport function TextArea ({ style, borderVertical = 0, ...props }) {\n  const [height, setHeight] = useState()\n\n  return (\n    <TextInput\n      style={[style, { height }]}\n      {...props}\n      multiline\n      textAlignVertical='top'\n      onContentSizeChange={({\n        nativeEvent: {\n          contentSize: { height }\n        }\n      }) => {\n        setHeight(height + borderVertical)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { StyleSheet, TouchableOpacity } from 'react-native'\nimport Svg, { Line } from 'react-native-svg'\nimport { colours, primary, shadows } from '../styles'\n\nfunction PlusMinusButton ({ onPress, isPlus }) {\n  return (\n    <TouchableOpacity\n      style={[shadows.smallShadow, colours.backing, styles.button]}\n      onPress={onPress}\n    >\n      <Svg\n        viewBox='0 0 35 35'\n        width={35}\n        height={35}\n        stroke={primary}\n        strokeWidth={4}\n        strokeLinecap='round'\n      >\n        <Line x1={9} y1={17.5} x2={26} y2={17.5} />\n        {isPlus && <Line x1={17.5} y1={9} x2={17.5} y2={26} />}\n      </Svg>\n    </TouchableOpacity>\n  )\n}\n\nexport function PlusButton ({ onPress }) {\n  return <PlusMinusButton onPress={onPress} isPlus={true} />\n}\n\nexport function MinusButton ({ onPress }) {\n  return <PlusMinusButton onPress={onPress} isPlus={false} />\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 35,\n    height: 35,\n    borderRadius: 35\n  }\n})\n","import React from 'react'\nimport Svg, { Polyline } from 'react-native-svg'\nimport { primary } from '../styles'\n\n/**\n * The v downwards-pointing chevron icon on the dropdown cards\n */\nexport function DropdownIcon () {\n  return (\n    <Svg\n      viewBox='0 0 20 12'\n      width={20}\n      height={12}\n      strokeWidth={2.5}\n      stroke={primary}\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      fill='none'\n    >\n      <Polyline points='2,2 10,10 18,2'></Polyline>\n    </Svg>\n  )\n}\n","import React, { useCallback, useContext, useRef, useState } from 'react'\nimport { Text, View, StyleSheet, TextInput, Alert } from 'react-native'\nimport { BaseView } from '../components/BaseView'\nimport { colours, greyOnWhite, shadows, text } from '../styles'\nimport { Card } from '../components/Card'\nimport { ArrowIcon } from '../buttons/ArrowIcon'\nimport { ApproveButton } from '../buttons/ApproveButton'\nimport { TextArea } from '../components/TextArea'\nimport { MinusButton, PlusButton } from '../buttons/PlusMinusButtons'\nimport { DropdownIcon } from '../buttons/DropdownIcon'\nimport { CheckUnsavedChanges } from '../components/UnsavedDialog'\nimport { SidContext } from '../sid/Sid'\n\nfunction parseRawIntensity (rawIntensity, intensity) {\n  if (!rawIntensity || !Number.isFinite(+rawIntensity)) {\n    return intensity\n  } else {\n    return Math.min(Math.max(Math.round(+rawIntensity), 1), 10)\n  }\n}\n\n/**\n * Journal entry editor.\n */\nexport function EditEntry ({ route, navigation }) {\n  const {\n    journalId,\n    initJournalData = { mood: 'Happy', intensity: 5, description: '' }\n  } = route.params\n\n  const sid = useContext(SidContext)\n  const [mood, setMood] = useState(initJournalData.mood)\n  const [intensity, setIntensity] = useState(initJournalData.intensity)\n  const [rawIntensity, setRawIntensity] = useState(null)\n  const [description, setDescription] = useState(initJournalData.description)\n\n  const unsavedChanges =\n    mood !== initJournalData.mood ||\n    rawIntensity !== null || // Don't save if there is still unprocessed numbers in the intensity\n    intensity !== initJournalData.intensity ||\n    description !== initJournalData.description\n  // Kind of hacky way to make it not show the dialog after pressing save/delete\n  const canExit = useRef(false)\n  const hasUnsavedChanges = useCallback(() => {\n    return unsavedChanges && !canExit.current\n  }, [unsavedChanges])\n\n  return (\n    <BaseView\n      title='Edit Entry'\n      navigation={navigation}\n      action={\n        <ApproveButton\n          onPress={async () => {\n            canExit.current = true\n            await sid.journals.save(\n              {\n                mood,\n                moodIntensity: parseRawIntensity(rawIntensity, intensity),\n                description\n              },\n              journalId\n            )\n            // In the Figma, saving an entry takes you to the journal list\n            // rather than the journal details page.\n            navigation.navigate('Journal')\n          }}\n        />\n      }\n      hideBottomButtons\n    >\n      <CheckUnsavedChanges\n        navigation={navigation}\n        hasUnsavedChanges={hasUnsavedChanges}\n      />\n      <Card\n        style={styles.card}\n        right={<DropdownIcon />}\n        onPress={() => {\n          console.log('DROPDOWN')\n          Alert.alert('wow', 'lol wee')\n        }}\n      >\n        <Text style={[text.body, colours.text]}>What’s your mood?</Text>\n      </Card>\n      <Card style={styles.card} flexStyle={styles.intensity}>\n        <Text style={[text.body, colours.text]}>\n          How intense is that mood? (1-10)\n        </Text>\n        <View style={styles.selector}>\n          <MinusButton\n            onPress={() => {\n              setIntensity(intensity => Math.max(intensity - 1, 1))\n            }}\n          />\n          <TextInput\n            value={rawIntensity ?? intensity.toString()}\n            onChange={({ nativeEvent: { text } }) => {\n              setRawIntensity(text.replace(/\\D/g, ''))\n            }}\n            onBlur={() => {\n              setIntensity(intensity => {\n                setRawIntensity(null)\n                return parseRawIntensity(rawIntensity, intensity)\n              })\n            }}\n            keyboardType='number-pad'\n            style={[\n              styles.mood,\n              text.subtitle,\n              colours.text,\n              colours.backing,\n              shadows.smallShadow\n            ]}\n          />\n          <PlusButton\n            onPress={() => {\n              setIntensity(intensity => Math.min(intensity + 1, 10))\n            }}\n          />\n        </View>\n      </Card>\n      <Card style={[styles.card, styles.content]}>\n        <Text style={[text.body, colours.text]}>Description</Text>\n        <TextArea\n          style={[styles.textArea, text.body, colours.text, colours.backing]}\n          borderVertical={2}\n          value={description}\n          onChange={({ nativeEvent: { text } }) => setDescription(text)}\n        />\n      </Card>\n      {journalId && (\n        <Card\n          style={styles.card}\n          right={<ArrowIcon />}\n          onPress={async () => {\n            canExit.current = true\n            await sid.journals.delete(journalId)\n            navigation.navigate('Journal')\n          }}\n        >\n          <Text style={[text.body, colours.text]}>Delete Entry</Text>\n        </Card>\n      )}\n    </BaseView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    marginBottom: 10\n  },\n  moodRate: {\n    padding: 10,\n    paddingTop: 5\n  },\n  textArea: {\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderColor: greyOnWhite,\n    borderWidth: 1,\n    borderRadius: 15\n  },\n  intensity: {\n    alignItems: 'center'\n  },\n  selector: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  mood: {\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    width: 70,\n    textAlign: 'center',\n    borderRadius: 15,\n    marginHorizontal: 10\n  }\n})\n","import React, { useEffect, useRef } from 'react'\nimport { StatusBar } from 'expo-status-bar'\nimport { Text, View } from 'react-native'\nimport {\n  useFonts,\n  PTSans_400Regular,\n  PTSans_700Bold\n} from '@expo-google-fonts/pt-sans'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { Home } from './src/views/Home'\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\nimport { Journal } from './src/views/Journal'\nimport { Details } from './src/views/Details'\nimport { EditEntry } from './src/views/EditEntry'\nimport { Sid, SidContext } from './src/sid/Sid'\n\nconst Stack = createNativeStackNavigator()\n\nexport default function App () {\n  const sid = useRef()\n  useEffect(() => {\n    sid.current = new Sid()\n  }, [])\n\n  const [fontsLoaded] = useFonts({\n    PTSans_400Regular,\n    PTSans_700Bold\n  })\n\n  if (!fontsLoaded || !sid.current) {\n    return (\n      <View style={{ alignItems: 'center', justifyContent: 'center', flex: 1 }}>\n        <Text>Loading...</Text>\n      </View>\n    )\n  }\n\n  return (\n    <SafeAreaProvider>\n      <StatusBar style='auto' />\n      <SidContext.Provider value={sid.current}>\n        <NavigationContainer>\n          <Stack.Navigator\n            initialRouteName='Home'\n            screenOptions={{\n              headerShown: false\n            }}\n          >\n            <Stack.Screen name='Home' component={Home} />\n            <Stack.Screen name='Journal' component={Journal} />\n            <Stack.Screen name='Details' component={Details} />\n            <Stack.Screen name='EditEntry' component={EditEntry} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SidContext.Provider>\n    </SafeAreaProvider>\n  )\n}\n","import 'react-native-gesture-handler';\nimport { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}