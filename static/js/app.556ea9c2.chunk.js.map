{"version":3,"sources":["src/styles.js","src/buttons/BackButton.js","src/components/BaseView.js","src/components/Card.js","src/buttons/ArrowIcon.js","src/components/Logo.js","src/views/Home.js","src/components/Happiness.js","src/sid/Journals.js","src/sid/utils.js","src/views/Journal.js","src/buttons/EditButton.js","src/views/Details.js","src/buttons/ApproveButton.js","src/components/TextArea.js","src/buttons/PlusMinusButtons.js","src/buttons/DropdownIcon.js","src/components/UnsavedDialog.js","src/utils.js","src/views/EditEntry.js","App.js","webpack:///./index.js?41f5"],"names":["text","StyleSheet","create","title","fontFamily","fontSize","subtitle","body","detail","textColour","white","colours","backing","backgroundColor","secondary","primary","color","cardBacking","greyOnWhite","whiteTextOnBacking","danger","positive","overlayBackground","lightBacking","shadows","smallShadow","shadowOffset","width","height","shadowRadius","shadowColor","elevation","BackButton","onPress","TouchableOpacity","viewBox","strokeWidth","stroke","strokeLinecap","x1","y1","x2","y2","TitleBar","action","onBack","SafeAreaView","style","styles","titleBar","Text","View","BaseView","navigation","children","wrapper","LinearGradient","colors","background","goBack","content","alignItems","flexDirection","padding","marginHorizontal","flex","position","top","left","right","bottom","zIndex","Card","flexStyle","MaybePressable","card","borderRadius","ArrowIcon","fill","points","Logo","d","marginLeft","Home","logo","navigate","hint","marginTop","textAlign","marginBottom","Happiness","happiness","icon","marginRight","justifyContent","get","journalId","a","async","AsyncStorage","getItem","json","JSON","parse","mood","moodIntensity","description","created","modified","Date","save","now","journal","undefined","Math","random","toFixed","slice","oldJournal","setItem","stringify","then","ids","includes","deleteEntry","split","filter","id","join","removeItem","Journal","useState","journals","setJournals","useEffect","journalIds","Promise","all","map","list","sort","b","key","toLocaleString","EditButton","Details","route","params","setJournal","initJournalData","intensity","ApproveButton","button","TextArea","borderVertical","props","setHeight","TextInput","multiline","textAlignVertical","onContentSizeChange","nativeEvent","contentSize","PlusMinusButton","isPlus","PlusButton","MinusButton","DropdownIcon","strokeLinejoin","UnsavedDialogContext","createContext","exitAction","setExitAction","UnsavedDialog","onCancel","onExit","TouchableWithoutFeedback","dialog","buttons","useUnsavedChanges","hasUnsavedChanges","cancel","useContext","handleBeforeRemove","e","preventDefault","dispatch","data","addListener","removeListener","useFocusEffect","useCallback","handleBackPress","BackHandler","addEventListener","removeEventListener","marginVertical","paddingTop","alignSelf","paddingVertical","paddingHorizontal","EditEntry","setIntensity","rawIntensity","setRawIntensity","setDescription","unsavedChanges","canExit","useRef","current","replace","console","log","Alert","alert","selector","max","value","onChange","onBlur","Number","isFinite","min","round","keyboardType","textArea","moodRate","borderColor","borderWidth","Stack","createNativeStackNavigator","registerRootComponent","setUnsavedDialogContextValue","unsavedDialogContextValue","useFonts","PTSans_400Regular","PTSans_700Bold","StatusBar","Provider","NavigationContainer","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","component"],"mappings":"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","file":"static/js/app.556ea9c2.chunk.js","sourcesContent":["import { StyleSheet } from 'react-native'\n\nexport const text = StyleSheet.create({\n  title: {\n    fontFamily: 'PTSans_700Bold',\n    fontSize: 30\n  },\n  subtitle: {\n    fontFamily: 'PTSans_700Bold',\n    fontSize: 24\n  },\n  body: {\n    fontFamily: 'PTSans_400Regular',\n    fontSize: 18\n  },\n  detail: {\n    fontFamily: 'PTSans_400Regular',\n    fontSize: 14\n  }\n})\n\nexport const secondary = '#67B3FA'\nexport const primary = '#1955EF'\nexport const greyOnWhite = '#9E9E9E'\nexport const textColour = 'rgba(0, 0, 0, 0.7216)'\nexport const white = '#FFFFFF'\nexport const colours = StyleSheet.create({\n  backing: {\n    backgroundColor: white\n  },\n  secondary: {\n    backgroundColor: secondary\n  },\n  primary: {\n    backgroundColor: primary\n  },\n  text: {\n    color: textColour\n  },\n  cardBacking: {\n    backgroundColor: 'rgba(255, 255, 255, 0.9)'\n  },\n  greyOnWhite: {\n    backgroundColor: greyOnWhite\n  },\n  whiteTextOnBacking: {\n    color: white\n  },\n  danger: {\n    backgroundColor: '#C51800'\n  },\n  positive: {\n    backgroundColor: '#2DE381'\n  },\n  overlayBackground: {\n    backgroundColor: 'rgba(0, 0, 0, 0.25)'\n  }\n})\nexport const lightBacking = [primary, secondary]\n\nexport const shadows = StyleSheet.create({\n  smallShadow: {\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowColor: 'rgba(0, 0, 0, 0.25)',\n    elevation: 3 // guesstimate\n  }\n})\n","import React from 'react'\nimport { Text, View, StyleSheet, Button, TouchableOpacity } from 'react-native'\nimport Svg, { Line } from 'react-native-svg'\nimport { textColour } from '../styles'\n\n/**\n * The < icon button in the Figma\n */\nexport function BackButton ({ onPress }) {\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Svg\n        viewBox='0 0 40 40'\n        width={40}\n        height={40}\n        strokeWidth={3}\n        stroke={textColour}\n        strokeLinecap='round'\n      >\n        <Line x1={14} y1={20} x2={25} y2={9} />\n        <Line x1={14} y1={20} x2={25} y2={31} />\n      </Svg>\n    </TouchableOpacity>\n  )\n}\n","import React from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport { colours, lightBacking, shadows, text } from '../styles'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { BackButton } from '../buttons/BackButton'\n\nfunction TitleBar ({ title, action, onBack }) {\n  return (\n    <SafeAreaView\n      style={[colours.backing, shadows.smallShadow, styles.titleBar]}\n    >\n      <BackButton onPress={onBack} />\n      <Text style={[colours.text, text.title, styles.title]}>{title}</Text>\n      {/* Insert placeholder if no action button; may have to resize this for that ELONGATED done button */}\n      {action ?? <View style={{ width: 40 }}></View>}\n    </SafeAreaView>\n  )\n}\n\n/**\n * Template for each view that provides a title bar\n *\n * - `navigation` - React Native navigation gives each view a `navigation` prop. Give it to BaseView so that its back button works\n * - `title` - text to show in the title bar (optional - if omitted, there is no title bar)\n * - `action` - thing to show on top right, maybe a done button or edit button (optional)\n * - `children` - content of view\n */\nexport function BaseView ({ navigation, title, action, children }) {\n  return (\n    <View style={[colours.whiteTextOnBacking, text.body, styles.wrapper]}>\n      <LinearGradient colors={lightBacking} style={styles.background} />\n      {title && <TitleBar title={title} action={action} onBack={() => {\n        navigation.goBack()\n      }} />}\n      <SafeAreaView style={styles.content}>{children}</SafeAreaView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  titleBar: {\n    height: 70,\n    alignItems: 'center',\n    flexDirection: 'row',\n    padding: 15\n  },\n  title: {\n    marginHorizontal: 'auto'\n  },\n\n  wrapper: {\n    flex: 1\n  },\n  background: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: -1\n  },\n  content: {\n    padding: 15\n  }\n})\n","import React from 'react'\nimport { Text, View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { colours, shadows } from '../styles'\n\n/**\n * Those, like, translucent cards in the Figma.\n *\n * Props:\n * - `style` - extra styles to add to the card (optional)\n * - `children` - card content\n * - `left` - content to make on the left side of the card, like those circular thingies (optional)\n * - `right` - content on the right side, like the arrow (optional)\n * - `onPress` - what to do when the card is pressed (optional)\n */\nexport function Card ({ style, flexStyle, children, left, right, onPress }) {\n  const MaybePressable = onPress ? TouchableOpacity : View\n  return (\n    <MaybePressable\n      style={[colours.cardBacking, styles.card, shadows.smallShadow, style]}\n      onPress={onPress}\n    >\n      {left}\n      <View style={[styles.content, flexStyle]}>{children}</View>\n      {right}\n    </MaybePressable>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    padding: 15,\n    borderRadius: 15,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  content: {\n    flex: 1\n  }\n})\n","import React from 'react'\nimport { Text, View, StyleSheet, Button, TouchableOpacity } from 'react-native'\nimport Svg, { Line, Polyline } from 'react-native-svg'\nimport { primary, textColour } from '../styles'\n\n/**\n * The -> icon on the cards\n */\nexport function ArrowIcon () {\n  return (\n    <Svg\n      viewBox='0 0 24 24'\n      width={24}\n      height={24}\n      strokeWidth={2.5}\n      stroke={primary}\n      strokeLinecap='round'\n      fill='none'\n    >\n      <Line x1={2} y1={12} x2={22} y2={12} />\n      <Polyline points='14,4 22,12 14,20'></Polyline>\n    </Svg>\n  )\n}\n","import React from 'react'\nimport { View, StyleSheet, Text } from 'react-native'\nimport Svg, { Path } from 'react-native-svg'\nimport { colours, text } from '../styles'\n\n/**\n * NOTE: The logo used in the design mockups are scaled up by 55/39.\n */\nexport function Logo ({ style }) {\n  return (\n    <View style={[styles.wrapper, style]}>\n      <Svg width={11} height={21} viewBox='0 0 11 21' fill='#67B3FA'>\n        <Path d='M11 6C11 2.68629 8.31371 0 5 0H0V5C0 8.31371 2.68629 11 6 11H10.4697L4.73483 5.26517C4.58839 5.11872 4.58839 4.88128 4.73483 4.73484C4.88128 4.58839 5.11872 4.58839 5.26516 4.73484L11 10.4697L11 6Z' />\n        <Path d='M10.6464 13H8C5.23858 13 3 15.2386 3 18V21H6C8.76142 21 11 18.7614 11 16V13.3536L7.17678 17.1768C7.07915 17.2744 6.92085 17.2744 6.82322 17.1768C6.72559 17.0791 6.72559 16.9209 6.82322 16.8232L10.6464 13Z' />\n      </Svg>\n      <Text style={[text.title, colours.whiteTextOnBacking, styles.text]}>\n        Menta\n      </Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  text: {\n    marginLeft: 1\n  }\n})\n","import React from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport { BaseView } from '../components/BaseView'\nimport { colours, text } from '../styles'\nimport { Card } from '../components/Card'\nimport { ArrowIcon } from '../buttons/ArrowIcon'\nimport { Logo } from '../components/Logo'\n\nexport function Home ({ navigation }) {\n  return (\n    <BaseView navigation={navigation}>\n      <Logo style={[styles.logo]} />\n      <Text style={[text.subtitle, colours.whiteTextOnBacking]}>\n        Good morning, Tony!\n      </Text>\n      <Text style={[text.body, colours.whiteTextOnBacking]}>\n        Ready to take on the world?\n      </Text>\n      <Card\n        style={styles.card}\n        right={<ArrowIcon />}\n        onPress={() => {\n          navigation.navigate('Journal')\n        }}\n      >\n        <Text style={[text.subtitle, colours.text]}>View my journal</Text>\n        <Text style={[text.body, colours.text]}>\n          Write freely about your thoughts\n        </Text>\n      </Card>\n      <Card style={styles.card}>\n        <Text style={[text.subtitle, colours.text]}>Sleep 8 Hours</Text>\n        <Text style={[text.body, colours.text]}>7h 30m today • Streak: 0</Text>\n      </Card>\n      <Text style={[text.detail, colours.whiteTextOnBacking, styles.hint]}>\n        Swipe left to skip • Swipe right to complete\n      </Text>\n    </BaseView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    marginTop: 10\n  },\n  hint: {\n    textAlign: 'center',\n    marginTop: 10\n  },\n  logo: {\n    marginBottom: 10\n  }\n})\n","import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { colours, shadows, text } from '../styles'\n\nexport function Happiness ({ happiness }) {\n  return (\n    <View style={[styles.icon, colours.positive, shadows.smallShadow]}>\n      <Text style={[text.title, colours.whiteTextOnBacking]}>{happiness}</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    borderRadius: 25,\n    width: 50,\n    height: 50,\n    marginRight: 15,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n})\n","// @ts-check\n\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { uuid } from './utils'\n\n/**\n * Journal entry data to be given to `save`.\n * @typedef {object} JournalSaveData\n * @property {string} mood - \"What’s your mood?\"\n * @property {number} moodIntensity - \"How intense is that mood? (1-10)\"\n * @property {string} description\n */\n\n/**\n * Journal entry data to show in the journal list.\n * @typedef {object} JournalPreview\n * @property {string} id - The journal ID.\n * @property {string} mood - \"What’s your mood?\"\n * @property {number} moodIntensity - \"How intense is that mood? (1-10)\"\n * @property {Date} created\n * @property {Date} modified\n */\n\n/**\n * A journal entry as returned by `get`.\n * @typedef {object} Journal\n * @property {string} mood - \"What’s your mood?\"\n * @property {number} moodIntensity - \"How intense is that mood? (1-10)\"\n * @property {string} description\n * @property {Date} created\n * @property {Date} modified\n */\n\n/**\n * Gets a journal entry by its ID.\n * @param {string} journalId\n * @returns {Promise<Journal | null>} The journal entry, or null if it doesn't\n * exist.\n */\nexport async function get (journalId) {\n  const json = await AsyncStorage.getItem(`journal:${journalId}`)\n  if (json === null) {\n    return null\n  } else {\n    const { mood, moodIntensity, description, created, modified } = JSON.parse(\n      json\n    )\n    return {\n      mood,\n      moodIntensity,\n      description,\n      created: new Date(created),\n      modified: new Date(modified)\n    }\n  }\n}\n\n/**\n * Saves a journal entry, whether it's an existing or a new entry.\n * @param {JournalSaveData} journal - The journal entry data to save.\n * @param {string} [journalId] - The ID of the journal entry if the journal\n * already exists. Omit if the journal entry is new.\n * @returns {Promise<string>} The ID of the journal entry.\n */\nexport async function save ({ mood, moodIntensity, description }, journalId) {\n  const now = new Date()\n  const journal = {\n    mood,\n    moodIntensity,\n    description,\n    created: now,\n    modified: now\n  }\n  if (journalId === undefined) {\n    journalId = uuid()\n  } else {\n    const oldJournal = await get(journalId)\n    if (oldJournal) journal.created = oldJournal.created\n  }\n  await AsyncStorage.setItem(`journal:${journalId}`, JSON.stringify(journal))\n  await AsyncStorage.setItem(\n    'journal:list',\n    await AsyncStorage.getItem('journal:list').then(ids => {\n      return ids?.includes(journalId) ? ids : (ids ? ids + ',' : '') + journalId\n    })\n  )\n  return journalId\n}\n\n/**\n * Deletes a journal entry by its ID.\n * @param {string} journalId\n */\nexport async function deleteEntry (journalId) {\n  await AsyncStorage.setItem(\n    'journal:list',\n    await AsyncStorage.getItem('journal:list').then(ids => {\n      if (ids) {\n        return ids\n          .split(',')\n          .filter(id => id !== journalId)\n          .join(',')\n      } else {\n        return ''\n      }\n    })\n  )\n  await AsyncStorage.removeItem(`journal:${journalId}`)\n}\n\n/**\n * Lists all journals.\n * @returns {Promise<JournalPreview[]>}\n */\nexport async function list () {\n  const journalIds = await AsyncStorage.getItem('journal:list').then(ids =>\n    ids ? ids.split(',') : []\n  )\n  return Promise.all(\n    journalIds.map(async id => {\n      const { mood, moodIntensity, created, modified } = await get(id)\n      return { id, mood, moodIntensity, created, modified }\n    })\n  )\n}\n","/**\n * Generates a unique ID. It will only contain base 10 digits.\n */\nexport function uuid () {\n  return `${Date.now()}${Math.random()\n    .toFixed(10)\n    .slice(2)}`\n}\n","import React, { useEffect, useState } from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport { BaseView } from '../components/BaseView'\nimport { colours, text } from '../styles'\nimport { Card } from '../components/Card'\nimport { ArrowIcon } from '../buttons/ArrowIcon'\nimport { Happiness } from '../components/Happiness'\nimport { list } from '../sid/Journals'\n\n/**\n * Journal entry list.\n */\nexport function Journal ({ navigation }) {\n  const [journals, setJournals] = useState(null)\n\n  useEffect(() => {\n    list().then(journals => {\n      // Sort by most recently created first\n      setJournals(journals.sort((a, b) => b.created - a.created))\n    })\n  }, [])\n\n  return (\n    <BaseView title='My Journal' navigation={navigation}>\n      <Text style={[text.subtitle, colours.whiteTextOnBacking]}>\n        Welcome back!\n      </Text>\n      <Text style={[text.body, colours.whiteTextOnBacking]}>\n        Feel free to write about your thoughts and feelings here anytime you\n        want.\n      </Text>\n      <Card\n        style={styles.card}\n        right={<ArrowIcon />}\n        onPress={() => {\n          navigation.navigate('EditEntry', {})\n        }}\n      >\n        <Text style={[text.subtitle, colours.text]}>Start a new entry</Text>\n        <Text style={[text.body, colours.text]}>\n          How are you feeling today?\n        </Text>\n      </Card>\n      {journals ? (\n        <>\n          {journals.map(({ id, mood, moodIntensity, created }) => {\n            return (\n              <Card\n                style={styles.card}\n                left={<Happiness happiness={moodIntensity} />}\n                onPress={() => {\n                  navigation.navigate('Details', { journalId: id })\n                }}\n                key={id}\n              >\n                <Text style={[text.subtitle, colours.text]}>{mood}</Text>\n                <Text style={[text.body, colours.text]}>\n                  {created.toLocaleString()}\n                </Text>\n              </Card>\n            )\n          })}\n          <Text style={[text.detail, colours.whiteTextOnBacking, styles.hint]}>\n            Tap a card to view or edit an entry.\n          </Text>\n        </>\n      ) : (\n        <Text style={[text.detail, colours.whiteTextOnBacking, styles.hint]}>\n          Loading journals...\n        </Text>\n      )}\n    </BaseView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    marginTop: 10\n  },\n  hint: {\n    textAlign: 'center',\n    marginTop: 10\n  }\n})\n","import React from 'react'\nimport { Text, View, StyleSheet, Button, TouchableOpacity } from 'react-native'\nimport Svg, { Path } from 'react-native-svg'\nimport { textColour } from '../styles'\n\n/**\n * The pencil icon button in the Figma\n */\nexport function EditButton ({ onPress }) {\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Svg viewBox='0 0 40 40' width={40} height={40} fill={textColour}>\n        <Path d='M24.125 10.8228L28.8057 15.4588L13.46 31.136L8.77929 26.5L24.125 10.8228Z' />\n        <Path d='M25.3193 9.5864L30 14.2224L32.9597 11.2088C33.2504 10.9129 33.2471 10.4356 32.9524 10.1437L29.3374 6.56326C29.0435 6.27221 28.571 6.27547 28.2813 6.57055L25.3193 9.5864Z' />\n        <Path d='M7.41525 33.4323L12.0557 32.5123L7.37498 27.8763L6.53495 32.5604C6.44143 33.0819 6.89862 33.5347 7.41525 33.4323Z' />\n      </Svg>\n    </TouchableOpacity>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Text, View, StyleSheet } from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport { BaseView } from '../components/BaseView'\nimport { colours, text } from '../styles'\nimport { Card } from '../components/Card'\nimport { ArrowIcon } from '../buttons/ArrowIcon'\nimport { EditButton } from '../buttons/EditButton'\nimport { Happiness } from '../components/Happiness'\nimport { get } from '../sid/Journals'\n\n/**\n * Journal entry details.\n */\nexport function Details ({ route, navigation }) {\n  const { journalId } = route.params\n  const [journal, setJournal] = useState(null)\n\n  useEffect(() => {\n    get(journalId).then(setJournal)\n  }, [])\n\n  return (\n    <BaseView\n      title='Entry Details'\n      navigation={navigation}\n      action={\n        journal && (\n          <EditButton\n            onPress={() => {\n              navigation.navigate('EditEntry', {\n                journalId,\n                initJournalData: {\n                  mood: journal.mood,\n                  intensity: journal.moodIntensity,\n                  description: journal.description\n                }\n              })\n            }}\n          />\n        )\n      }\n    >\n      {journal ? (\n        <>\n          <Card\n            style={styles.card}\n            left={<Happiness happiness={journal.moodIntensity} />}\n          >\n            <Text style={[text.subtitle, colours.text]}>{journal.mood}</Text>\n            <Text style={[text.body, colours.text]}>\n              {journal.created.toLocaleString()}\n            </Text>\n          </Card>\n          <Card style={styles.content}>\n            <Text style={[text.body, colours.text]}>{journal.description}</Text>\n          </Card>\n        </>\n      ) : (\n        <Text style={[text.detail, colours.whiteTextOnBacking, styles.hint]}>\n          Loading journal...\n        </Text>\n      )}\n    </BaseView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    marginBottom: 10\n  },\n  content: {\n    padding: 10\n  }\n})\n","import React from 'react'\nimport { Text, View, StyleSheet, Button, TouchableOpacity } from 'react-native'\nimport Svg, { Line } from 'react-native-svg'\nimport { colours, shadows, white } from '../styles'\n\n/**\n * The < icon button in the Figma\n */\nexport function ApproveButton ({ onPress }) {\n  return (\n    <TouchableOpacity onPress={onPress} style={[styles.button, colours.primary, shadows.smallShadow]}>\n      <Svg\n        viewBox='0 0 26.67 20'\n        width={26.67}\n        height={20}\n        strokeWidth={2.5}\n        stroke={white}\n        strokeLinecap='round'\n      >\n        <Line x1={1.77} y1={10.48} x2={9.52} y2={18.23} />\n        <Line x1={24.9} y1={2.86} x2={9.52} y2={18.23} />\n      </Svg>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 60,\n    height: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n})\n","import React, { useState } from 'react'\nimport { TextInput } from 'react-native'\n\n/**\n * A multiline text field that automatically grows to fit the text content.\n *\n * Unfortunately it does not shrink because I don't know how to do that. (TODO)\n */\nexport function TextArea ({ style, borderVertical = 0, ...props }) {\n  const [height, setHeight] = useState()\n\n  return (\n    <TextInput\n      style={[style, { height }]}\n      {...props}\n      multiline\n      textAlignVertical='top'\n      onContentSizeChange={({\n        nativeEvent: {\n          contentSize: { height }\n        }\n      }) => {\n        setHeight(height + borderVertical)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { Text, View, StyleSheet, Button, TouchableOpacity } from 'react-native'\nimport Svg, { Line, Path } from 'react-native-svg'\nimport { colours, primary, shadows, textColour } from '../styles'\n\nfunction PlusMinusButton ({ onPress, isPlus }) {\n  return (\n    <TouchableOpacity\n      style={[shadows.smallShadow, colours.backing, styles.button]}\n      onPress={onPress}\n    >\n      <Svg\n        viewBox='0 0 35 35'\n        width={35}\n        height={35}\n        stroke={primary}\n        strokeWidth={4}\n        strokeLinecap='round'\n      >\n        <Line x1={9} y1={17.5} x2={26} y2={17.5} />\n        {isPlus && <Line x1={17.5} y1={9} x2={17.5} y2={26} />}\n      </Svg>\n    </TouchableOpacity>\n  )\n}\n\nexport function PlusButton ({ onPress }) {\n  return (\n    <PlusMinusButton onPress={onPress} isPlus={true} />\n  )\n}\n\nexport function MinusButton ({ onPress }) {\n  return (\n    <PlusMinusButton onPress={onPress} isPlus={false} />\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 35,\n    height: 35,\n    borderRadius: 35\n  }\n})\n","import React from 'react'\nimport { Text, View, StyleSheet, Button, TouchableOpacity } from 'react-native'\nimport Svg, { Line, Polyline } from 'react-native-svg'\nimport { primary, textColour } from '../styles'\n\n/**\n * The v downwards-pointing chevron icon on the dropdown cards\n */\nexport function DropdownIcon () {\n  return (\n    <Svg\n      viewBox='0 0 20 12'\n      width={20}\n      height={12}\n      strokeWidth={2.5}\n      stroke={primary}\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      fill='none'\n    >\n      <Polyline points='2,2 10,10 18,2'></Polyline>\n    </Svg>\n  )\n}\n","import React, { createContext, useContext, useEffect, useState } from 'react'\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View\n} from 'react-native'\nimport Svg, { Path } from 'react-native-svg'\nimport { colours, shadows, text, white } from '../styles'\nimport { useAndroidBackCancel } from '../utils'\n\nexport const UnsavedDialogContext = createContext({\n  exitAction: null,\n  setExitAction: () => {}\n})\n\nexport function UnsavedDialog ({ onCancel, onExit }) {\n  return (\n    <View style={[styles.wrapper]}>\n      <TouchableWithoutFeedback onPress={onCancel}>\n        <View style={[styles.background, colours.overlayBackground]} />\n      </TouchableWithoutFeedback>\n      <View style={[styles.dialog, colours.backing, shadows.smallShadow]}>\n        <Text style={[text.subtitle]}>Heads up!</Text>\n        <Text style={[styles.body, text.body]}>\n          Unsaved changes will be lost.\n        </Text>\n        <View style={styles.buttons}>\n          <TouchableOpacity\n            style={[styles.button, colours.greyOnWhite, shadows.smallShadow]}\n            onPress={onCancel}\n          >\n            <Text style={[colours.whiteTextOnBacking, text.body]}>Cancel</Text>\n            <Svg\n              viewBox='0 0 20 20'\n              width={20}\n              height={20}\n              stroke={white}\n              strokeWidth={3}\n              strokeLinecap='round'\n            >\n              <Path d='M 2 18 L 18 2 M 2 2 L 18 18' />\n            </Svg>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[styles.button, colours.danger, shadows.smallShadow]}\n            onPress={onExit}\n          >\n            <Text style={[colours.whiteTextOnBacking, text.body]}>\n              Exit Without Saving\n            </Text>\n            <Svg\n              width={20}\n              height={20}\n              viewBox='0 0 20 20'\n              stroke={white}\n              strokeWidth={3}\n              strokeLinecap='round'\n            >\n              <Path d='M18 10.5L14.2619 14.2381 M18 10.5L14.3064 6.80637 M2 2.5L2 18.5 M2 2.5H10 M2 18.5H10 M18 10.5H10' />\n            </Svg>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  )\n}\n\nexport function useUnsavedChanges (navigation, hasUnsavedChanges) {\n  const { exitAction, setExitAction } = useContext(UnsavedDialogContext)\n\n  // https://reactnavigation.org/docs/preventing-going-back\n  useEffect(() => {\n    const handleBeforeRemove = e => {\n      if (hasUnsavedChanges()) {\n        e.preventDefault()\n        setExitAction(() => {\n          navigation.dispatch(e.data.action)\n        })\n      }\n    }\n    navigation.addListener('beforeRemove', handleBeforeRemove)\n    return () => {\n      navigation.removeListener('beforeRemove', handleBeforeRemove)\n    }\n  }, [navigation, hasUnsavedChanges])\n\n  useAndroidBackCancel(exitAction, () => setExitAction(null))\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 100\n  },\n  background: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh'\n  },\n  dialog: {\n    width: 303,\n    padding: 10,\n    alignItems: 'center',\n    borderRadius: 15\n  },\n  body: {\n    marginVertical: 5\n  },\n  buttons: {\n    padding: 5,\n    paddingTop: 0,\n    alignSelf: 'stretch'\n  },\n  button: {\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 20,\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n})\n","// @ts-check\n\nimport { useFocusEffect } from '@react-navigation/native'\nimport { useCallback } from 'react'\nimport { BackHandler } from 'react-native'\n\n/**\n * Cancels the default Android back button behaviour. For example, if there's a\n * dialogue covering the screen, the back button should close it rather than\n * also going to the previous view.\n *\n * @param {boolean} cancel Whether to cancel the default Android back button\n * behaviour.\n * @param {() => {}} onCancel A handler for when the back button is cancelled.\n * NOTE: This is likely going to have stale values because it is not listed as a\n * dependency for useCallback.\n * @see https://reactnavigation.org/docs/custom-android-back-button-handling\n */\nexport function useAndroidBackCancel (cancel, onCancel) {\n  // TODO: I haven't tested this code\n  useFocusEffect(\n    useCallback(() => {\n      if (cancel) {\n        const handleBackPress = () => {\n          onCancel()\n          return true\n        }\n        BackHandler.addEventListener('hardwareBackPress', handleBackPress)\n        return () => {\n          BackHandler.removeEventListener('hardwareBackPress', handleBackPress)\n        }\n      }\n    }, [cancel])\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { Text, View, StyleSheet, TextInput, Alert } from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport { BaseView } from '../components/BaseView'\nimport { colours, greyOnWhite, shadows, text } from '../styles'\nimport { Card } from '../components/Card'\nimport { ArrowIcon } from '../buttons/ArrowIcon'\nimport { ApproveButton } from '../buttons/ApproveButton'\nimport { TextArea } from '../components/TextArea'\nimport { MinusButton, PlusButton } from '../buttons/PlusMinusButtons'\nimport { DropdownIcon } from '../buttons/DropdownIcon'\nimport { deleteEntry, save } from '../sid/Journals'\nimport {\n  UnsavedDialogContext,\n  useUnsavedChanges\n} from '../components/UnsavedDialog'\nimport { useCallback } from 'react/cjs/react.development'\n\n/**\n * Journal entry editor.\n */\nexport function EditEntry ({ route, navigation }) {\n  const {\n    journalId,\n    initJournalData = { mood: 'Happy', intensity: 5, description: '' }\n  } = route.params\n\n  const [mood, setMood] = useState(initJournalData.mood)\n  const [intensity, setIntensity] = useState(initJournalData.intensity)\n  const [rawIntensity, setRawIntensity] = useState(null)\n  const [description, setDescription] = useState(initJournalData.description)\n\n  const unsavedChanges =\n    mood !== initJournalData.mood ||\n    rawIntensity !== null || // Don't save if there is still unprocessed numbers in the intensity\n    intensity !== initJournalData.intensity ||\n    description !== initJournalData.description\n  // Kind of hacky way to make it not show the dialog after pressing save/delete\n  const canExit = useRef(false)\n  const hasUnsavedChanges = useCallback(() => {\n    return unsavedChanges && !canExit.current\n  }, [unsavedChanges])\n  useUnsavedChanges(navigation, hasUnsavedChanges)\n\n  return (\n    <BaseView\n      title='Edit Entry'\n      navigation={navigation}\n      action={\n        <ApproveButton\n          onPress={async () => {\n            canExit.current = true\n            const id = await save(\n              { mood, moodIntensity: intensity, description },\n              journalId\n            )\n            if (journalId) {\n              navigation.goBack()\n            } else {\n              navigation.replace('Details', { journalId: id })\n            }\n          }}\n        />\n      }\n    >\n      <Card\n        style={styles.card}\n        right={<DropdownIcon />}\n        onPress={() => {\n          console.log('DROPDOWN')\n          Alert.alert('wow', 'lol wee')\n        }}\n      >\n        <Text style={[text.body, colours.text]}>What’s your mood?</Text>\n      </Card>\n      <Card style={styles.card} flexStyle={styles.intensity}>\n        <Text style={[text.body, colours.text]}>\n          How intense is that mood? (1-10)\n        </Text>\n        <View style={styles.selector}>\n          <MinusButton\n            onPress={() => {\n              setIntensity(intensity => Math.max(intensity - 1, 1))\n            }}\n          />\n          <TextInput\n            value={rawIntensity ?? intensity}\n            onChange={({ nativeEvent: { text } }) => {\n              setRawIntensity(text.replace(/\\D/g, ''))\n            }}\n            onBlur={() => {\n              setIntensity(intensity => {\n                setRawIntensity(null)\n                if (rawIntensity === '' || !Number.isFinite(+rawIntensity)) {\n                  return intensity\n                } else {\n                  return Math.min(Math.max(Math.round(+rawIntensity), 1), 10)\n                }\n              })\n            }}\n            keyboardType='number-pad'\n            style={[\n              styles.mood,\n              text.subtitle,\n              colours.text,\n              colours.backing,\n              shadows.smallShadow\n            ]}\n          />\n          <PlusButton\n            onPress={() => {\n              setIntensity(intensity => Math.min(intensity + 1, 10))\n            }}\n          />\n        </View>\n      </Card>\n      <Card style={[styles.card, styles.content]}>\n        <Text style={[text.body, colours.text]}>Description</Text>\n        <TextArea\n          style={[styles.textArea, text.body, colours.text, colours.backing]}\n          borderVertical={2}\n          value={description}\n          onChange={({ nativeEvent: { text } }) => setDescription(text)}\n        />\n      </Card>\n      {journalId && (\n        <Card\n          style={styles.card}\n          right={<ArrowIcon />}\n          onPress={async () => {\n            canExit.current = true\n            await deleteEntry(journalId)\n            navigation.navigate('Journal')\n          }}\n        >\n          <Text style={[text.body, colours.text]}>Delete Entry</Text>\n        </Card>\n      )}\n    </BaseView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    marginBottom: 10\n  },\n  moodRate: {\n    padding: 10,\n    paddingTop: 5\n  },\n  textArea: {\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderColor: greyOnWhite,\n    borderWidth: 1,\n    borderRadius: 15\n  },\n  intensity: {\n    alignItems: 'center'\n  },\n  selector: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  mood: {\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    width: 70,\n    textAlign: 'center',\n    borderRadius: 15,\n    marginHorizontal: 10\n  }\n})\n","import React, { createContext, useState } from 'react'\nimport { StatusBar } from 'expo-status-bar'\nimport { StyleSheet, Text, View } from 'react-native'\nimport {\n  useFonts,\n  PTSans_400Regular,\n  PTSans_700Bold\n} from '@expo-google-fonts/pt-sans'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { Home } from './src/views/Home'\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context'\nimport { Journal } from './src/views/Journal'\nimport { Details } from './src/views/Details'\nimport { EditEntry } from './src/views/EditEntry'\nimport {\n  UnsavedDialog,\n  UnsavedDialogContext\n} from './src/components/UnsavedDialog'\n\nconst Stack = createNativeStackNavigator()\n\nexport default function App () {\n  // This is kind of scuffed but position: fixed isn't supported by React Native\n  // apparently\n  const setExitAction = exitAction => {\n    setUnsavedDialogContextValue(({ setExitAction }) => ({\n      exitAction,\n      setExitAction\n    }))\n  }\n  const [unsavedDialogContextValue, setUnsavedDialogContextValue] = useState({\n    exitAction: null,\n    setExitAction\n  })\n\n  const [fontsLoaded] = useFonts({\n    PTSans_400Regular,\n    PTSans_700Bold\n  })\n\n  if (!fontsLoaded) {\n    return (\n      <View style={{ alignItems: 'center', justifyContent: 'center', flex: 1 }}>\n        <Text>Loading...</Text>\n      </View>\n    )\n  }\n\n  return (\n    <SafeAreaProvider>\n      <StatusBar style='auto' />\n      {unsavedDialogContextValue.exitAction && (\n        <UnsavedDialog\n          onCancel={() => {\n            setExitAction(null)\n          }}\n          onExit={() => {\n            unsavedDialogContextValue.exitAction()\n            setExitAction(null)\n          }}\n        />\n      )}\n      <UnsavedDialogContext.Provider value={unsavedDialogContextValue}>\n        <NavigationContainer>\n          <Stack.Navigator\n            initialRouteName='Home'\n            screenOptions={{\n              headerShown: false\n            }}\n          >\n            <Stack.Screen name='Home' component={Home} />\n            <Stack.Screen name='Journal' component={Journal} />\n            <Stack.Screen name='Details' component={Details} />\n            <Stack.Screen name='EditEntry' component={EditEntry} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </UnsavedDialogContext.Provider>\n    </SafeAreaProvider>\n  )\n}\n","import 'react-native-gesture-handler';\nimport { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}